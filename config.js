IDRViewer.config = {"pagecount":362,"title":"","author":"","fileName":"Kotlin_in_Action.pdf","boundsbookmarks":[{"title":"Kotlin in Action","page":1,"zoom":"XYZ 0 1017 0"},{"title":"brief contents","page":6,"zoom":"XYZ 100 702 null"},{"title":"contents","page":8,"zoom":"XYZ 100 702 null"},{"title":"foreword","page":16,"zoom":"XYZ 100 702 null"},{"title":"preface","page":18,"zoom":"XYZ 100 702 null"},{"title":"acknowledgments","page":20,"zoom":"XYZ 100 702 null"},{"title":"about this book","page":22,"zoom":"XYZ 100 702 null","children":[{"title":"Who should read this book","page":22,"zoom":"XYZ 100 394 null"},{"title":"How this book is organized","page":23,"zoom":"XYZ 87 941 null"},{"title":"Code conventions and downloads","page":24,"zoom":"XYZ 100 941 null"},{"title":"Author Online","page":24,"zoom":"XYZ 100 522 null"},{"title":"Other online resources","page":24,"zoom":"XYZ 100 267 null"}]},{"title":"about the authors","page":25,"zoom":"XYZ 87 702 null"},{"title":"about the cover illustration","page":26,"zoom":"XYZ 100 702 null"},{"title":"Part 1 Introducing Kotlin","page":28,"zoom":"XYZ 137 890 null","children":[{"title":"1 Kotlin: what and why","page":30,"zoom":"XYZ 119 1029 null","children":[{"title":"1.1 A taste of Kotlin","page":30,"zoom":"XYZ 119 253 null"},{"title":"1.2 Kotlin\u2019s primary traits","page":31,"zoom":"XYZ 87 406 null","children":[{"title":"1.2.1 Target platforms: server-side, Android, anywhere Java runs","page":31,"zoom":"XYZ 87 307 null"},{"title":"1.2.2 Statically typed","page":32,"zoom":"XYZ 100 649 null"},{"title":"1.2.3 Functional and object-oriented","page":33,"zoom":"XYZ 87 641 null"},{"title":"1.2.4 Free and open source","page":34,"zoom":"XYZ 100 383 null"}]},{"title":"1.3 Kotlin applications","page":34,"zoom":"XYZ 100 171 null","children":[{"title":"1.3.1 Kotlin on the server side","page":35,"zoom":"XYZ 87 941 null"},{"title":"1.3.2 Kotlin on Android","page":36,"zoom":"XYZ 100 640 null"}]},{"title":"1.4 The philosophy of Kotlin","page":37,"zoom":"XYZ 87 585 null","children":[{"title":"1.4.1 Pragmatic","page":37,"zoom":"XYZ 87 485 null"},{"title":"1.4.2 Concise","page":38,"zoom":"XYZ 100 731 null"},{"title":"1.4.3 Safe","page":39,"zoom":"XYZ 87 941 null"},{"title":"1.4.4 Interoperable","page":39,"zoom":"XYZ 87 198 null"}]},{"title":"1.5 Using the Kotlin tools","page":40,"zoom":"XYZ 100 360 null","children":[{"title":"1.5.1 Compiling Kotlin code","page":40,"zoom":"XYZ 100 220 null"},{"title":"1.5.2 Plug-in for IntelliJ IDEA and Android Studio","page":41,"zoom":"XYZ 87 317 null"},{"title":"1.5.3 Interactive shell","page":42,"zoom":"XYZ 100 941 null"},{"title":"1.5.4 Eclipse plug-in","page":42,"zoom":"XYZ 100 806 null"},{"title":"1.5.5 Online playground","page":42,"zoom":"XYZ 100 689 null"},{"title":"1.5.6 Java-to-Kotlin converter","page":42,"zoom":"XYZ 100 551 null"}]},{"title":"1.6 Summary","page":42,"zoom":"XYZ 100 161 null"}]},{"title":"2 Kotlin basics","page":44,"zoom":"XYZ 119 1029 null","children":[{"title":"2.1 Basic elements: functions and variables","page":45,"zoom":"XYZ 87 941 null","children":[{"title":"2.1.1 Hello, world!","page":45,"zoom":"XYZ 87 841 null"},{"title":"2.1.2 Functions","page":45,"zoom":"XYZ 87 288 null"},{"title":"2.1.3 Variables","page":47,"zoom":"XYZ 87 597 null"},{"title":"2.1.4 Easier string formatting: string templates","page":49,"zoom":"XYZ 87 941 null"}]},{"title":"2.2 Classes and properties","page":50,"zoom":"XYZ 100 941 null","children":[{"title":"2.2.1 Properties","page":50,"zoom":"XYZ 100 186 null"},{"title":"2.2.2 Custom accessors","page":52,"zoom":"XYZ 100 504 null"},{"title":"2.2.3 Kotlin source code layout: directories and packages","page":53,"zoom":"XYZ 87 750 null"}]},{"title":"2.3 Representing and handling choices: enums and \u201cwhen\u201d","page":55,"zoom":"XYZ 87 828 null","children":[{"title":"2.3.1 Declaring enum classes","page":55,"zoom":"XYZ 87 708 null"},{"title":"2.3.2 Using \u201cwhen\u201d to deal with enum classes","page":56,"zoom":"XYZ 100 847 null"},{"title":"2.3.3 Using \u201cwhen\u201d with arbitrary objects","page":57,"zoom":"XYZ 87 710 null"},{"title":"2.3.4 Using \u201cwhen\u201d without an argument","page":58,"zoom":"XYZ 100 941 null"},{"title":"2.3.5 Smart casts: combining type checks and casts","page":58,"zoom":"XYZ 100 317 null"},{"title":"2.3.6 Refactoring: replacing \u201cif\u201d with \u201cwhen\u201d","page":60,"zoom":"XYZ 100 372 null"},{"title":"2.3.7 Blocks as branches of \u201cif\u201d and \u201cwhen\u201d","page":61,"zoom":"XYZ 87 359 null"}]},{"title":"2.4 Iterating over things: \u201cwhile\u201d and \u201cfor\u201d loops","page":62,"zoom":"XYZ 100 491 null","children":[{"title":"2.4.1 The \u201cwhile\u201d loop","page":62,"zoom":"XYZ 100 333 null"},{"title":"2.4.2 Iterating over numbers: ranges and progressions","page":63,"zoom":"XYZ 87 941 null"},{"title":"2.4.3 Iterating over maps","page":64,"zoom":"XYZ 100 627 null"},{"title":"2.4.4 Using \u201cin\u201d to check collection and range membership","page":65,"zoom":"XYZ 87 348 null"}]},{"title":"2.5 Exceptions in Kotlin","page":66,"zoom":"XYZ 100 209 null","children":[{"title":"2.5.1 \u201ctry\u201d, \u201ccatch\u201d, and \u201cfinally\u201d","page":67,"zoom":"XYZ 87 527 null"},{"title":"2.5.2 \u201ctry\u201d as an expression","page":68,"zoom":"XYZ 100 443 null"}]},{"title":"2.6 Summary","page":69,"zoom":"XYZ 87 354 null"}]},{"title":"3 Defining and calling functions","page":71,"zoom":"XYZ 100 1029 null","children":[{"title":"3.1 Creating collections in Kotlin","page":72,"zoom":"XYZ 100 941 null"},{"title":"3.2 Making functions easier to call","page":73,"zoom":"XYZ 87 808 null","children":[{"title":"3.2.1 Named arguments","page":74,"zoom":"XYZ 100 696 null"},{"title":"3.2.2 Default parameter values","page":75,"zoom":"XYZ 87 802 null"},{"title":"3.2.3 Getting rid of static utility classes: top-level functions and properties","page":76,"zoom":"XYZ 100 343 null"}]},{"title":"3.3 Adding methods to other people\u2019s classes: extension functions and properties","page":78,"zoom":"XYZ 100 175 null","children":[{"title":"3.3.1 Imports and extension functions","page":80,"zoom":"XYZ 100 788 null"},{"title":"3.3.2 Calling extension functions from Java","page":80,"zoom":"XYZ 100 299 null"},{"title":"3.3.3 Utility functions as extensions","page":81,"zoom":"XYZ 87 847 null"},{"title":"3.3.4 No overriding for extension functions","page":82,"zoom":"XYZ 100 797 null"},{"title":"3.3.5 Extension properties","page":83,"zoom":"XYZ 87 334 null"}]},{"title":"3.4 Working with collections: varargs, infix calls, and library support","page":84,"zoom":"XYZ 100 407 null","children":[{"title":"3.4.1 Extending the Java Collections API","page":84,"zoom":"XYZ 100 178 null"},{"title":"3.4.2 Varargs: functions that accept an arbitrary number of arguments","page":85,"zoom":"XYZ 87 392 null"},{"title":"3.4.3 Working with pairs: infix calls and destructuring declarations","page":86,"zoom":"XYZ 100 725 null"}]},{"title":"3.5 Working with strings and regular expressions","page":87,"zoom":"XYZ 87 522 null","children":[{"title":"3.5.1 Splitting strings","page":87,"zoom":"XYZ 87 323 null"},{"title":"3.5.2 Regular expressions and triple-quoted strings","page":88,"zoom":"XYZ 100 539 null"},{"title":"3.5.3 Multiline triple-quoted strings","page":89,"zoom":"XYZ 87 198 null"}]},{"title":"3.6 Making your code tidy: local functions and extensions","page":91,"zoom":"XYZ 87 941 null"},{"title":"3.7 Summary","page":93,"zoom":"XYZ 87 510 null"}]},{"title":"4 Classes, objects, and interfaces","page":94,"zoom":"XYZ 119 1029 null","children":[{"title":"4.1 Defining class hierarchies","page":95,"zoom":"XYZ 87 748 null","children":[{"title":"4.1.1 Interfaces in Kotlin","page":95,"zoom":"XYZ 87 627 null"},{"title":"4.1.2 Open, final, and abstract modifiers: final by default","page":97,"zoom":"XYZ 87 195 null"},{"title":"4.1.3 Visibility modifiers: public by default","page":100,"zoom":"XYZ 100 887 null"},{"title":"4.1.4 Inner and nested classes: nested by default","page":102,"zoom":"XYZ 100 941 null"},{"title":"4.1.5 Sealed classes: defining restricted class hierarchies","page":104,"zoom":"XYZ 100 866 null"}]},{"title":"4.2 Declaring a class with nontrivial constructors or properties","page":105,"zoom":"XYZ 87 287 null","children":[{"title":"4.2.1 Initializing classes: primary constructor and initializer blocks","page":106,"zoom":"XYZ 100 941 null"},{"title":"4.2.2 Secondary constructors: initializing the superclass in different ways","page":108,"zoom":"XYZ 100 343 null"},{"title":"4.2.3 Implementing properties declared in interfaces","page":110,"zoom":"XYZ 100 369 null"},{"title":"4.2.4 Accessing a backing field from a getter or setter","page":112,"zoom":"XYZ 100 887 null"},{"title":"4.2.5 Changing accessor visibility","page":113,"zoom":"XYZ 87 941 null"}]},{"title":"4.3 Compiler-generated methods: data classes and class delegation","page":114,"zoom":"XYZ 100 869 null","children":[{"title":"4.3.1 Universal object methods","page":114,"zoom":"XYZ 100 614 null"},{"title":"4.3.2 Data classes: autogenerated implementations of universal methods","page":116,"zoom":"XYZ 100 195 null"},{"title":"4.3.3 Class delegation: using the \u201cby\u201d keyword","page":118,"zoom":"XYZ 100 776 null"}]},{"title":"4.4 The \u201cobject\u201d keyword: declaring a class and creating an instance, combined","page":120,"zoom":"XYZ 100 768 null","children":[{"title":"4.4.1 Object declarations: singletons made easy","page":120,"zoom":"XYZ 100 514 null"},{"title":"4.4.2 Companion objects: a place for factory methods and static members","page":123,"zoom":"XYZ 87 941 null"},{"title":"4.4.3 Companion objects as regular objects","page":125,"zoom":"XYZ 87 941 null"},{"title":"4.4.4 Object expressions: anonymous inner classes rephrased","page":127,"zoom":"XYZ 87 527 null"}]},{"title":"4.5 Summary","page":128,"zoom":"XYZ 100 203 null"}]},{"title":"5 Programming with lambdas","page":130,"zoom":"XYZ 119 1029 null","children":[{"title":"5.1 Lambda expressions and member references","page":131,"zoom":"XYZ 87 941 null","children":[{"title":"5.1.1 Introduction to lambdas: blocks of code as function parameters","page":131,"zoom":"XYZ 87 840 null"},{"title":"5.1.2 Lambdas and collections","page":132,"zoom":"XYZ 100 941 null"},{"title":"5.1.3 Syntax for lambda expressions","page":133,"zoom":"XYZ 87 618 null"},{"title":"5.1.4 Accessing variables in scope","page":136,"zoom":"XYZ 100 536 null"},{"title":"5.1.5 Member references","page":138,"zoom":"XYZ 100 346 null"}]},{"title":"5.2 Functional APIs for collections","page":140,"zoom":"XYZ 100 490 null","children":[{"title":"5.2.1 Essentials: filter and map","page":140,"zoom":"XYZ 100 252 null"},{"title":"5.2.2 \u201call\u201d, \u201cany\u201d, \u201ccount\u201d, and \u201cfind\u201d: applying a predicate to a collection","page":142,"zoom":"XYZ 100 386 null"},{"title":"5.2.3 groupBy: converting a list to a map of groups","page":144,"zoom":"XYZ 100 941 null"},{"title":"5.2.4 flatMap and flatten: processing elements in nested collections","page":144,"zoom":"XYZ 100 287 null"}]},{"title":"5.3 Lazy collection operations: sequences","page":145,"zoom":"XYZ 87 165 null","children":[{"title":"5.3.1 Executing sequence operations: intermediate and terminal operations","page":147,"zoom":"XYZ 87 866 null"},{"title":"5.3.2 Creating sequences","page":149,"zoom":"XYZ 87 484 null"}]},{"title":"5.4 Using Java functional interfaces","page":150,"zoom":"XYZ 100 588 null","children":[{"title":"5.4.1 Passing a lambda as a parameter to a Java method","page":151,"zoom":"XYZ 87 333 null"},{"title":"5.4.2 SAM constructors: explicit conversion of lambdas to functional interfaces","page":153,"zoom":"XYZ 87 418 null"}]},{"title":"5.5 Lambdas with receivers: \u201cwith\u201d and \u201capply\u201d","page":155,"zoom":"XYZ 87 941 null","children":[{"title":"5.5.1 The \u201cwith\u201d function","page":155,"zoom":"XYZ 87 742 null"},{"title":"5.5.2 The \u201capply\u201d function","page":157,"zoom":"XYZ 87 640 null"}]},{"title":"5.6 Summary","page":158,"zoom":"XYZ 100 362 null"}]},{"title":"6 The Kotlin type system","page":160,"zoom":"XYZ 119 1029 null","children":[{"title":"6.1 Nullability","page":160,"zoom":"XYZ 119 221 null","children":[{"title":"6.1.1 Nullable types","page":161,"zoom":"XYZ 87 711 null"},{"title":"6.1.2 The meaning of types","page":163,"zoom":"XYZ 87 887 null"},{"title":"6.1.3 Safe call operator: \u201c?.\u201d","page":164,"zoom":"XYZ 100 569 null"},{"title":"6.1.4 Elvis operator: \u201c?:\u201d","page":166,"zoom":"XYZ 100 941 null"},{"title":"6.1.5 Safe casts: \u201cas?\u201d","page":167,"zoom":"XYZ 87 221 null"},{"title":"6.1.6 Not-null assertions: \u201c!!\u201d","page":168,"zoom":"XYZ 100 160 null"},{"title":"6.1.7 The \u201clet\u201d function","page":170,"zoom":"XYZ 100 210 null"},{"title":"6.1.8 Late-initialized properties","page":172,"zoom":"XYZ 100 577 null"},{"title":"6.1.9 Extensions for nullable types","page":173,"zoom":"XYZ 87 180 null"},{"title":"6.1.10 Nullability of type parameters","page":175,"zoom":"XYZ 87 501 null"},{"title":"6.1.11 Nullability and Java","page":176,"zoom":"XYZ 100 650 null"}]},{"title":"6.2 Primitive and other basic types","page":180,"zoom":"XYZ 100 869 null","children":[{"title":"6.2.1 Primitive types: Int, Boolean, and more","page":180,"zoom":"XYZ 100 751 null"},{"title":"6.2.2 Nullable primitive types: Int?, Boolean?, and more","page":181,"zoom":"XYZ 87 718 null"},{"title":"6.2.3 Number conversions","page":182,"zoom":"XYZ 100 692 null"},{"title":"6.2.4 \u201cAny\u201d and \u201cAny?\u201d: the root types","page":184,"zoom":"XYZ 100 800 null"},{"title":"6.2.5 The Unit type: Kotlin\u2019s \u201cvoid\u201d","page":184,"zoom":"XYZ 100 352 null"},{"title":"6.2.6 The Nothing type: \u201cThis function never returns\u201d","page":185,"zoom":"XYZ 87 328 null"}]},{"title":"6.3 Collections and arrays","page":186,"zoom":"XYZ 100 548 null","children":[{"title":"6.3.1 Nullability and collections","page":186,"zoom":"XYZ 100 407 null"},{"title":"6.3.2 Read-only and mutable collections","page":188,"zoom":"XYZ 100 297 null"},{"title":"6.3.3 Kotlin collections and Java","page":190,"zoom":"XYZ 100 545 null"},{"title":"6.3.4 Collections as platform types","page":192,"zoom":"XYZ 100 357 null"},{"title":"6.3.5 Arrays of objects and primitive types","page":194,"zoom":"XYZ 100 377 null"}]},{"title":"6.4 Summary","page":197,"zoom":"XYZ 87 941 null"}]}]},{"title":"Part 2 Embracing Kotlin","page":198,"zoom":"XYZ 137 890 null","children":[{"title":"7 Operator overloading and other conventions","page":200,"zoom":"XYZ 119 1029 null","children":[{"title":"7.1 Overloading arithmetic operators","page":201,"zoom":"XYZ 87 672 null","children":[{"title":"7.1.1 Overloading binary arithmetic operations","page":201,"zoom":"XYZ 87 472 null"},{"title":"7.1.2 Overloading compound assignment operators","page":204,"zoom":"XYZ 100 455 null"},{"title":"7.1.3 Overloading unary operators","page":205,"zoom":"XYZ 87 187 null"}]},{"title":"7.2 Overloading comparison operators","page":207,"zoom":"XYZ 87 941 null","children":[{"title":"7.2.1 Equality operators: \u201cequals\u201d","page":207,"zoom":"XYZ 87 820 null"},{"title":"7.2.2 Ordering operators: compareTo","page":208,"zoom":"XYZ 100 669 null"}]},{"title":"7.3 Conventions used for collections and ranges","page":209,"zoom":"XYZ 87 421 null","children":[{"title":"7.3.1 Accessing elements by index: \u201cget\u201d and \u201cset\u201d","page":209,"zoom":"XYZ 87 244 null"},{"title":"7.3.2 The \u201cin\u201d convention","page":211,"zoom":"XYZ 87 609 null"},{"title":"7.3.3 The rangeTo convention","page":212,"zoom":"XYZ 100 806 null"},{"title":"7.3.4 The \u201citerator\u201d convention for the \u201cfor\u201d loop","page":213,"zoom":"XYZ 87 811 null"}]},{"title":"7.4 Destructuring declarations and component functions","page":214,"zoom":"XYZ 100 941 null","children":[{"title":"7.4.1 Destructuring declarations and loops","page":215,"zoom":"XYZ 87 406 null"}]},{"title":"7.5 Reusing property accessor logic: delegated properties","page":216,"zoom":"XYZ 100 687 null","children":[{"title":"7.5.1 Delegated properties: the basics","page":216,"zoom":"XYZ 100 389 null"},{"title":"7.5.2 Using delegated properties: lazy initialization and \u201cby lazy()\u201d","page":217,"zoom":"XYZ 87 398 null"},{"title":"7.5.3 Implementing delegated properties","page":219,"zoom":"XYZ 87 941 null"},{"title":"7.5.4 Delegated-property translation rules","page":222,"zoom":"XYZ 100 296 null"},{"title":"7.5.5 Storing property values in a map","page":223,"zoom":"XYZ 87 401 null"},{"title":"7.5.6 Delegated properties in frameworks","page":224,"zoom":"XYZ 100 313 null"}]},{"title":"7.6 Summary","page":226,"zoom":"XYZ 100 728 null"}]},{"title":"8 Higher-order functions: lambdas as parameters and return values","page":227,"zoom":"XYZ 100 1029 null","children":[{"title":"8.1 Declaring higher-order functions","page":228,"zoom":"XYZ 100 941 null","children":[{"title":"8.1.1 Function types","page":228,"zoom":"XYZ 100 667 null"},{"title":"8.1.2 Calling functions passed as arguments","page":229,"zoom":"XYZ 87 320 null"},{"title":"8.1.3 Using function types from Java","page":231,"zoom":"XYZ 87 890 null"},{"title":"8.1.4 Default and null values for parameters with function types","page":232,"zoom":"XYZ 100 847 null"},{"title":"8.1.5 Returning functions from functions","page":234,"zoom":"XYZ 100 724 null"},{"title":"8.1.6 Removing duplication through lambdas","page":236,"zoom":"XYZ 100 806 null"}]},{"title":"8.2 Inline functions: removing the overhead of lambdas","page":238,"zoom":"XYZ 100 782 null","children":[{"title":"8.2.1 How inlining works","page":238,"zoom":"XYZ 100 430 null"},{"title":"8.2.2 Restrictions on inline functions","page":240,"zoom":"XYZ 100 528 null"},{"title":"8.2.3 Inlining collection operations","page":241,"zoom":"XYZ 87 617 null"},{"title":"8.2.4 Deciding when to declare functions as inline","page":242,"zoom":"XYZ 100 479 null"},{"title":"8.2.5 Using inlined lambdas for resource management","page":243,"zoom":"XYZ 87 788 null"}]},{"title":"8.3 Control flow in higher-order functions","page":244,"zoom":"XYZ 100 459 null","children":[{"title":"8.3.1 Return statements in lambdas: return from an enclosing function","page":244,"zoom":"XYZ 100 319 null"},{"title":"8.3.2 Returning from lambdas: return with a label","page":245,"zoom":"XYZ 87 172 null"},{"title":"8.3.3 Anonymous functions: local returns by default","page":247,"zoom":"XYZ 87 522 null"}]},{"title":"8.4 Summary","page":248,"zoom":"XYZ 100 265 null"}]},{"title":"9 Generics","page":250,"zoom":"XYZ 119 1029 null","children":[{"title":"9.1 Generic type parameters","page":251,"zoom":"XYZ 87 867 null","children":[{"title":"9.1.1 Generic functions and properties","page":251,"zoom":"XYZ 87 165 null"},{"title":"9.1.2 Declaring generic classes","page":253,"zoom":"XYZ 87 381 null"},{"title":"9.1.3 Type parameter constraints","page":254,"zoom":"XYZ 100 300 null"},{"title":"9.1.4 Making type parameters non-null","page":256,"zoom":"XYZ 100 452 null"}]},{"title":"9.2 Generics at runtime: erased and reified type parameters","page":257,"zoom":"XYZ 87 514 null","children":[{"title":"9.2.1 Generics at runtime: type checks and casts","page":257,"zoom":"XYZ 87 337 null"},{"title":"9.2.2 Declaring functions with reified type parameters","page":260,"zoom":"XYZ 100 828 null"},{"title":"9.2.3 Replacing class references with reified type parameters","page":262,"zoom":"XYZ 100 704 null"},{"title":"9.2.4 Restrictions on reified type parameters","page":263,"zoom":"XYZ 87 692 null"}]},{"title":"9.3 Variance: generics and subtyping","page":264,"zoom":"XYZ 100 941 null","children":[{"title":"9.3.1 Why variance exists: passing an argument to a function","page":264,"zoom":"XYZ 100 782 null"},{"title":"9.3.2 Classes, types, and subtypes","page":265,"zoom":"XYZ 87 708 null"},{"title":"9.3.3 Covariance: preserved subtyping relation","page":267,"zoom":"XYZ 87 708 null"},{"title":"9.3.4 Contravariance: reversed subtyping relation","page":270,"zoom":"XYZ 100 314 null"},{"title":"9.3.5 Use-site variance: specifying variance for type occurrences","page":273,"zoom":"XYZ 87 941 null"},{"title":"9.3.6 Star projection: using * instead of a type argument","page":275,"zoom":"XYZ 87 284 null"}]},{"title":"9.4 Summary","page":279,"zoom":"XYZ 87 291 null"}]},{"title":"10 Annotations and reflection","page":281,"zoom":"XYZ 119 1029 null","children":[{"title":"10.1 Declaring and applying annotations","page":282,"zoom":"XYZ 100 847 null","children":[{"title":"10.1.1 Applying annotations","page":282,"zoom":"XYZ 100 710 null"},{"title":"10.1.2 Annotation targets","page":283,"zoom":"XYZ 87 493 null"},{"title":"10.1.3 Using annotations to customize JSON serialization","page":285,"zoom":"XYZ 87 572 null"},{"title":"10.1.4 Declaring annotations","page":287,"zoom":"XYZ 87 501 null"},{"title":"10.1.5 Meta-annotations: controlling how an annotation is processed","page":288,"zoom":"XYZ 100 695 null"},{"title":"10.1.6 Classes as annotation parameters","page":289,"zoom":"XYZ 87 750 null"},{"title":"10.1.7 Generic classes as annotation parameters","page":290,"zoom":"XYZ 100 687 null"}]},{"title":"10.2 Reflection: introspecting Kotlin objects at runtime","page":291,"zoom":"XYZ 87 537 null","children":[{"title":"10.2.1 The Kotlin reflection API: KClass, KCallable, KFunction, and KProperty","page":292,"zoom":"XYZ 100 705 null"},{"title":"10.2.2 Implementing object serialization using reflection","page":295,"zoom":"XYZ 87 244 null"},{"title":"10.2.3 Customizing serialization with annotations","page":297,"zoom":"XYZ 87 685 null"},{"title":"10.2.4 JSON parsing and object deserialization","page":300,"zoom":"XYZ 100 398 null"},{"title":"10.2.5 Final deserialization step: callBy() and creating objects using reflection","page":304,"zoom":"XYZ 100 279 null"}]},{"title":"10.3 Summary","page":308,"zoom":"XYZ 100 768 null"}]},{"title":"11 DSL construction","page":309,"zoom":"XYZ 119 1029 null","children":[{"title":"11.1 From APIs to DSLs","page":310,"zoom":"XYZ 100 941 null","children":[{"title":"11.1.1 The concept of domain-specific languages","page":311,"zoom":"XYZ 87 505 null"},{"title":"11.1.2 Internal DSLs","page":312,"zoom":"XYZ 100 568 null"},{"title":"11.1.3 Structure of DSLs","page":313,"zoom":"XYZ 87 626 null"},{"title":"11.1.4 Building HTML with an internal DSL","page":314,"zoom":"XYZ 100 440 null"}]},{"title":"11.2 Building structured APIs: lambdas with receivers in DSLs","page":315,"zoom":"XYZ 87 304 null","children":[{"title":"11.2.1 Lambdas with receivers and extension function types","page":315,"zoom":"XYZ 87 183 null"},{"title":"11.2.2 Using lambdas with receivers in HTML builders","page":319,"zoom":"XYZ 87 421 null"},{"title":"11.2.3 Kotlin builders: enabling abstraction and reuse","page":323,"zoom":"XYZ 87 491 null"}]},{"title":"11.3 More flexible block nesting with the \u201cinvoke\u201d convention","page":326,"zoom":"XYZ 100 715 null","children":[{"title":"11.3.1 The \u201cinvoke\u201d convention: objects callable as functions","page":326,"zoom":"XYZ 100 554 null"},{"title":"11.3.2 The \u201cinvoke\u201d convention and functional types","page":327,"zoom":"XYZ 87 715 null"},{"title":"11.3.3 The \u201cinvoke\u201d convention in DSLs: declaring dependencies in Gradle","page":328,"zoom":"XYZ 100 484 null"}]},{"title":"11.4 Kotlin DSLs in practice","page":330,"zoom":"XYZ 100 867 null","children":[{"title":"11.4.1 Chaining infix calls: \u201cshould\u201d in test frameworks","page":330,"zoom":"XYZ 100 708 null"},{"title":"11.4.2 Defining extensions on primitive types: handling dates","page":332,"zoom":"XYZ 100 713 null"},{"title":"11.4.3 Member extension functions: internal DSL for SQL","page":333,"zoom":"XYZ 87 829 null"},{"title":"11.4.4 Anko: creating Android UIs dynamically","page":336,"zoom":"XYZ 100 890 null"}]},{"title":"11.5 Summary","page":337,"zoom":"XYZ 87 438 null"}]}]},{"title":"appendix A Building Kotlin projects","page":340,"zoom":"XYZ 119 846 null","children":[{"title":"A.1 Building Kotlin code with Gradle","page":340,"zoom":"XYZ 119 618 null","children":[{"title":"A.1.1 Building Kotlin Android applications with Gradle","page":341,"zoom":"XYZ 87 605 null"},{"title":"A.1.2 Building projects that use annotation processing","page":341,"zoom":"XYZ 87 275 null"}]},{"title":"A.2 Building Kotlin projects with Maven","page":342,"zoom":"XYZ 100 742 null"},{"title":"A.3 Building Kotlin code with Ant","page":342,"zoom":"XYZ 100 256 null"}]},{"title":"appendix B Documenting Kotlin code","page":344,"zoom":"XYZ 119 846 null","children":[{"title":"B.1 Writing Kotlin documentation comments","page":344,"zoom":"XYZ 119 618 null"},{"title":"B.2 Generating API documentation","page":345,"zoom":"XYZ 87 256 null"}]},{"title":"appendix C The Kotlin ecosystem","page":347,"zoom":"XYZ 100 846 null","children":[{"title":"C.1 Testing","page":347,"zoom":"XYZ 100 414 null"},{"title":"C.2 Dependency injection","page":348,"zoom":"XYZ 100 941 null"},{"title":"C.3 JSON serialization","page":348,"zoom":"XYZ 100 821 null"},{"title":"C.4 HTTP clients","page":348,"zoom":"XYZ 100 643 null"},{"title":"C.5 Web applications","page":348,"zoom":"XYZ 100 504 null"},{"title":"C.6 Database access","page":349,"zoom":"XYZ 87 869 null"},{"title":"C.7 Utilities and data structures","page":349,"zoom":"XYZ 87 730 null"},{"title":"C.8 Desktop programming","page":349,"zoom":"XYZ 87 464 null"}]},{"title":"index","page":350,"zoom":"XYZ 100 812 null","children":[{"title":"Symbols","page":350,"zoom":"XYZ 100 692 null"},{"title":"A","page":350,"zoom":"XYZ 100 291 null"},{"title":"B","page":351,"zoom":"XYZ 87 650 null"},{"title":"C","page":351,"zoom":"XYZ 87 148 null"},{"title":"D","page":352,"zoom":"XYZ 421 565 null"},{"title":"E","page":353,"zoom":"XYZ 87 224 null"},{"title":"F","page":353,"zoom":"XYZ 407 365 null"},{"title":"G","page":354,"zoom":"XYZ 100 224 null"},{"title":"H","page":354,"zoom":"XYZ 421 348 null"},{"title":"I","page":355,"zoom":"XYZ 87 705 null"},{"title":"J","page":355,"zoom":"XYZ 407 409 null"},{"title":"K","page":356,"zoom":"XYZ 100 542 null"},{"title":"L","page":356,"zoom":"XYZ 421 557 null"},{"title":"M","page":357,"zoom":"XYZ 87 550 null"},{"title":"N","page":357,"zoom":"XYZ 407 789 null"},{"title":"O","page":358,"zoom":"XYZ 100 939 null"},{"title":"P","page":358,"zoom":"XYZ 100 287 null"},{"title":"R","page":358,"zoom":"XYZ 421 209 null"},{"title":"S","page":359,"zoom":"XYZ 87 317 null"},{"title":"T","page":360,"zoom":"XYZ 100 256 null"},{"title":"U","page":361,"zoom":"XYZ 87 505 null"},{"title":"V","page":361,"zoom":"XYZ 407 875 null"},{"title":"W","page":361,"zoom":"XYZ 407 528 null"},{"title":"Z","page":361,"zoom":"XYZ 407 244 null"}]},{"title":"Kotlin in Action-back","page":362,"zoom":"XYZ 0 1017 0"}],"thumbnailType":"jpg","pageType":"html","pageLabels":["Kotlin in Action","i","ii","iii","iv","v","vi","vii","viii","ix","x","xi","xii","xiii","xiv","xv","xvi","xvii","xviii","xix","xx","xxi","xxii","xxiii","xxiv","xxv","xxvi","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334",""]};